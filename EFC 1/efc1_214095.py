# -*- coding: utf-8 -*-
"""efc1_214095.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x_YWPJ_aku49VbqDw18mEtknf9fI8msw
"""

#@title Importação de Bibliotecas
import matplotlib.pyplot as plt

"""# Questão E"""

# Função que calcula a convolução de dois canais
def convolution(s,h): 
    K = len(s)
    D = len(h)
    soma = 0
    y = list(range(K+D-1))
    for n in range(0,K+D-1):
        for k in range(0,K):
          if ((n - k) > -1) & (n - k < D):
                soma = soma + s[k]*h[n-k]
        y[n] = round(soma,6)
        soma = 0
    return y # Retorna o valor do somatório referente à convolução

w1 = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.3, 0.3**2, 0.3**3, 0.3**4] # Filtro equalizador 1
w2 = [1, 1.5, 0.7, -0.2, 0.3] # Filtro equalizador 2
h = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, -0.3] # Resposta ao impulso

g1 = convolution(w1,h)
g2 = convolution(w2,h)

print("g1[n] = ", g1)
print("g2[n] = ", g2)

"""# Questão F"""

s = 10*[1] + 90*[0]   #Conjunto de 100 amostras
x = convolution(s,h)  # Resultante da convolução dos canais s[n] e h[n]

plt.figure(figsize=(17,5))
plt.title('Gráfico de s[n] em função de n')
plt.xlabel('n')
plt.ylabel('s[n]')
plt.stem(list(range(len(s))), s, linefmt = (':','k'), markerfmt = ('o','red'), basefmt = 'k', use_line_collection = True)
plt.grid()
plt.show()

plt.figure(figsize=(17,5))
plt.title('Gráfico de s[n] em função de n')
plt.xlabel('n')
plt.ylabel('x[n]')
plt.stem(list(range(len(x))), x, linefmt = (':','k'), markerfmt = ('o','red'), basefmt = 'k', use_line_collection = True)
plt.grid()
plt.show()

"""# Questão G"""

y1 = convolution(x, w1)  # Resultante da convolução dos canais s[n] e h[n]
y2 = convolution(x, w2)  # Resultante da convolução dos canais s[n] e h[n]

plt.figure(figsize=(17,5))
plt.title('Gráfico de y1[n] em função de n')
plt.xlabel('n')
plt.ylabel('s[n]')
plt.stem(list(range(len(y1))), y1, linefmt = (':'), markerfmt = ('o'), basefmt = 'k',  use_line_collection = True, label = 'y1[n]')
plt.stem(list(range(len(s))), s, linefmt = (':','red'), markerfmt = ('o','red'), basefmt = 'k', use_line_collection = True, label = 's[n]')
plt.grid()
plt.legend(loc='upper right')
plt.show()

plt.figure(figsize=(17,5))
plt.title('Gráfico de y2[n] e s[n] em função de n')
plt.xlabel('n')
plt.ylabel('x[n]')
plt.stem(list(range(len(y2))), y2, linefmt = (':'), markerfmt = ('o'), basefmt = 'k', use_line_collection = True, label = 'y2[n]')
plt.stem(list(range(len(s))), s, linefmt = (':','red'), markerfmt = ('o','red'), basefmt = 'k', use_line_collection = True, label = 's[n]')
plt.grid()
plt.legend(loc='upper right')
plt.show()